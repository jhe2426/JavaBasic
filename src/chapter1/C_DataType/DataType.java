package chapter1.C_DataType;

public class DataType {

	public static void main(String[] args) {
		
		//리터럴 : 리터럴은 데이터 그 자체를 뜻 한다. 

		//상수는 변하지 않는 변수를 의미하며(메모리 위치) 메모리 값을 변경할 수 없다.
		//리터럴은 변수의 값이 변하지 않는 데이터(메모리 위치안의 값)를 의미한다. 
		
		//리터럴 상수는 데이터 그 자체를 의미
		
		
		//일반 상수 즉, 실수형이 아닌 수는 134이런 숫자는 기본 int형으로 인식을 하기 때문에 
		//int형 타입의 범위를 벗어나 Long형으로 초기화를 할 때는 꼭 L를 붙여서 초기화를 해야지 Long형으로 인식을 하게 됨
		//그러지 않고 Long형 타입에  상수에 L을 붙이지 않으면 
		//Type mismatch: cannot convert from int to Long 이런 오류가 발생함
		Long long1 = 1213_21314L;
		//Long long2 = 1235324; <- L를 안 붙여서 오류가 발생하게 됨
		
		
		
		//실수 타입
		//float type
		//4 byte (1.4 * 10^ - 45 ~ 3.4 * 10^38) 크기의 데이터를 가질 수 있는 실수형 데이터 타입
		//실수 타입의 리터럴 상수의 데이터 타입은 double이기 때문에 ex) 1.23이런 식으로 F를 붙이지 않으면 디폴트로 
		//실수 타입이 double타입이므로 float형으로 리터럴 상수를 지정시키고 싶으면  F를 꼭 같이 작성해주어야 함
		//float 타입의 리터럴 상수를 지정할 땐 리터럴 상수 뒤에 F를 붙여줌
		float float1 = 3.14F;
		//실수형은 타입에 따라  double과 float타입의 오차 범위가 중요함
		//float은 소수점 6자리에서 오차가 발생
		
		//double type
		//8 byte 크기의 데이터를 가질 수 있는 실수형
		double double1 = 3.1415;
		//double은 소수점 15자리에서 오차가 발생
		//소수점 연산의 오차범위를 줄이기 위해서 double형을 사용함
		
		
		
		//문자 타입
		
		//char(캐릭터) type
		//2 byte (0 ~ 65,535)크기의 데이터를 가질 수 있는 문자형 데이터 타입
		//정수 타입은 1비트를 부호로 사용을 하는데 문자 타입은 1비트를 부호로 사용하지 않고 모든 비트를 다 크기로 사용함
		//문자(단어가 아님) 하나를 저장 할 수 있는 공간
		//한 문자를 표기 할 땐 ' '으로 묶어서 표기
		char char1 = 'a';
		char char2 = 97; // char형 97이 소문자 a임
		
		
		//논리 타입
		
		//boolean type
		//1 byte (false, true) 크기의 데이터를 가질 수 있는 논리형 데이터 타입
		//실제 사용되는 데이터의 크기는 1비트인데 자바에서 처리하는 가장 작은 단위가 1byte이므로 boolean은 1byte이다.
		boolean boolean1 = true;
		boolean1 = false;
		//boolean타입형의 리턴하는 변수명을 is, has를 붙여서 명명을 많이 함 ex) is**, has**
		//단지 true, false값을 가지고 있는 변수명으로는 flag로 명명을 주로 함
		
		
		//형 변환(Type casting)
		
		//자동 형 변환(묵시적 형 변환)
		//차지하는 범위가 작은 데이터 타입은 범위가(바이트 단위만 같다고 할 수 있는게 아닌 표현하는 범위 또한 같아야 함) 큰 테이터 타입으로 자동 형 변환 됨
		short short2 = 1; //short형은 2byte
		int int2 = short2; //int형은 4byte
		char char3 = 1;
		//밑에 두개 식은 오류가 뜸
		//왜?
		//표현하는 범위가 다르기 때문 char형은 부호를 표현하는 비트가 없음
		//short는 부호를 표현하는 비트가 존재하므로 short에는 -가 들어올 수 있지만, char형은 -는 들어올 수 가 없으므로
		//Type mismatch 오류가 뜸
		//short2 = char3;
		//char3 = short2;

		
		//강제 형 변환(명시적 형 변환)
		//차지하는 범위가 큰 데이터 타입은 범위가 작은 데이터 타입으로 대입할 때
		//형 변환(타입)을 명시해야 함
		//강제 형 변환의 경우 overflow(범위 초과)가 발생할 수 있음
		short2 = (short)int2;
		
		
		//참조형 데이터 타입
		//기본 데이터 타입이 아닌 메모리 주소를 참조하는 데이터 타입
		//클래스
		//기본 데이터 타입과 다르게 변수명을 명명할 때 첫 문자가 대문자로 시작 됨
		//대표적인 참조형 데이터 타입 : String
		//String은 문자열을 담을 수 있는 참조형 데이터 타입
		String string1 = "This is Comment";
		//참조형 데이터 타입 변수에 저장되어져 있는 것은 실제 데이터 값이 아닌 메모리 주소가 저장 되어 있음
		
	}

}
